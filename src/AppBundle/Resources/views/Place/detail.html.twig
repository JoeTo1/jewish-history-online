{% extends 'AppBundle:Default:base.html.twig' %}

{% block head %}
    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/leaflet-0.7.7/leaflet.css" />
    <script src="{{ app.request.basepath }}/vendor/leaflet-0.7.7/leaflet.js"></script>

    <link rel="stylesheet" href="{{ app.request.basepath }}/vendor/leaflet.label/leaflet.label.css" />
    <script src="{{ app.request.basepath }}/vendor/leaflet.label/leaflet.label.js"></script>
{% endblock %}

{% block body %}
    {% set path = place.path %}
    {% if path is not empty %}
    <div class="smaller">
        {% for child in path %}
        <a href="{% if child.tgn is not empty %}{{ path('place-by-tgn', { 'tgn' : child.tgn }) }}{% else %}{{ path('place', { 'id' : child.id }) }}{% endif %}">
        {{ child.nameLocalized(app.request.locale) }}
        </a>
        {% if not loop.last %} &gt; {% endif %}
    {% endfor %}
    </div>
    {% endif %}
    <h1>
        {{ place.nameLocalized(app.request.locale) }}
    </h1>
    <div class="row">
        <div class="col-sm-8">

            {% if place.children|length > 0 %}
            <h3>{{ place.childrenLabel|trans }}</h3>
            <ul>
            {% for child in place.children %}
                <li><a href="{% if child.tgn is not empty %}{{ path('place-by-tgn', { 'tgn' : child.tgn }) }}{% else %}{{ path('place', { 'id' : child.id }) }}{% endif %}">
                    {{ child.nameLocalized(app.request.locale) }}
                </a></li>
            {% endfor %}
            </ul>
            {% endif %}
            <h3>TODO: Prim&auml;rer Ort / Erw&auml;hnt in</h3>

        </div>

        <div class="col-sm-4 sidebar">
            {% set geo = place.geo %}
            {% if geo is not empty %}
            <div id="map" class="col-sm-12" style="width: 100%; min-height: 360px"></div>
            <script>
            function adjustMapSize() {
                /*
                $('#map').height(function(index, height) {
                    return window.innerHeight - $(this).offset().top;
                });
                */
            }

            $( window ).resize(adjustMapSize);
            adjustMapSize();

            var map = L.map('map');

            {% if place.additional.bounds is not empty %}
            map.fitBounds({{ place.additional.bounds|json_encode|raw }});
            {% else %}
            map.setView([{{ geo }}], 3);
            {% endif %}

            if (true) {
                L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpandmbXliNDBjZWd2M2x6bDk3c2ZtOTkifQ._QA7i5Mpkd_m30IGElHziw', {
                    maxZoom: 16,
                    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                        'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
                    id: 'mapbox.streets'
                }).addTo(map);
            }
            else {
                L.tileLayer('http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 18,
                    attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                        '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>',
                    id: 'mapbox.streets'
                }).addTo(map);
            }
            </script>
            {% endif %}
        </div>
    </div><!-- .row -->
{% endblock %}
