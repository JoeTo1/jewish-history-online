{% extends 'AppBundle:Default:base.html.twig' %}

{% import 'AppBundle:Shared:helper.html.twig' as helper %}
{% import 'AppBundle:Shared:map-leaflet.html.twig' as map %}

{% block head %}
    {{ map.head() }}
{% endblock %}

{% block body %}
    {% set path = place.path %}
    {% if path is not empty %}
    <div class="smaller">
        {% for child in path %}
        <a href="{% if child.tgn is not empty %}{{ path('place-by-tgn', { 'tgn' : child.tgn }) }}{% else %}{{ path('place', { 'id' : child.id }) }}{% endif %}">
        {{ child.nameLocalized(app.request.locale) }}
        </a>
        {% if not loop.last %} &gt; {% endif %}
    {% endfor %}
    </div>
    {% endif %}
    <h1>
        {{ place.nameLocalized(app.request.locale) }}
    </h1>
    <div class="row">
        <div class="col-sm-8">
        {% if place.children|length > 0 %}
            <h3>{{ place.childrenLabel|trans }}</h3>
            <ul>
            {% for child in place.children %}
                <li><a href="{% if child.tgn is not empty %}{{ path('place-by-tgn', { 'tgn' : child.tgn }) }}{% else %}{{ path('place', { 'id' : child.id }) }}{% endif %}">
                    {{ child.nameLocalized(app.request.locale) }}
                </a></li>
            {% endfor %}
            </ul>
        {% endif %}

        {{ helper.list_entity_mentioned_in(place.articleReferences(app.request.locale)) }}
        </div>

        <div class="col-sm-4 sidebar">
            {% set geo = place.geo %}
            {% if geo is not empty %}
            <div id="map" class="col-sm-12" style="width: 100%; min-height: 360px"></div>
            <script>
            function adjustMapSize() {
                /*
                $('#map').height(function(index, height) {
                    return window.innerHeight - $(this).offset().top;
                });
                */
            }

            $( window ).resize(adjustMapSize);
            adjustMapSize();

            var map = L.map('map');

            {% if place.additional.bounds is not empty %}
            map.fitBounds({{ place.additional.bounds|json_encode|raw }});
            {% else %}
            map.setView([{{ geo }}], 3);
            {% endif %}

            {{ map.addTileLayer() }}
            </script>
            {% endif %}
        </div>
    </div><!-- .row -->
{% endblock %}
